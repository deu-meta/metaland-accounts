version: '3.7'
services:
  metaland-accounts:
    container_name: metaland-accounts
    build: .
    restart: always
    ports:
      - 8000:8000
    volumes:
      - .:/metaland-accounts
    environment:
      - OAUTHLIB_INSECURE_TRANSPORT=${OAUTHLIB_INSECURE_TRANSPORT}
      - MTL_ACCOUNTS_DEBUG=True
      - MTL_ACCOUNTS_OAUTH2_MICROSOFT_CLIENT_ID=${MTL_ACCOUNTS_OAUTH2_MICROSOFT_CLIENT_ID}
      - MTL_ACCOUNTS_OAUTH2_MICROSOFT_SECRET=${MTL_ACCOUNTS_OAUTH2_MICROSOFT_SECRET}
      - MTL_ACCOUNTS_OAUTH2_MICROSOFT_CLIENT_TENANT=${MTL_ACCOUNTS_OAUTH2_MICROSOFT_CLIENT_TENANT}
      - MTL_ACCOUNTS_OAUTH2_MICROSOFT_REDIRECT_URL=${MTL_ACCOUNTS_OAUTH2_MICROSOFT_REDIRECT_URL}
      - MTL_ACCOUNTS_SECRET_KEY=${MTL_ACCOUNTS_SECRET_KEY}
      - MTL_ACCOUNTS_JWT_ALGORITHM=${MTL_ACCOUNTS_JWT_ALGORITHM}
      - MTL_ACCOUNTS_JWT_REDIRECT_URL=http://localhost:3000/login/callback
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=mtl_postgresql
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - REDIS_HOST=mtl_redis
      - REDIS_PORT=6379
      - REDIS_DATABASE=${REDIS_DATABASE}

  mtl_redis:
    image: redis:alpine
    restart: always
    command: redis-server --port 6379
    container_name: mtl_redis
    hostname: mtl_redis
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 26379:6379

  mtl_postgresql:
    image: postgres
    restart: always
    container_name: mtl_postgresql
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    ports:
      - 25432:5432
    volumes:
      - ./db/:/docker-entrypoint-initdb.d
